/**
 * Main Application Initialization
 * Coordinates all components and handles global functionality
 */

class TrueNorthApp {
    constructor() {
        this.components = {};
        this.isInitialized = false;
        
        // Configuration
        this.config = {
            backgroundImages: [
                // P4H Global images from website
                './images/bg1.jpg',  // Community classroom scene
                './images/bg2.jpg',  // Teacher training session
                './images/bg3.jpg',  // Student engagement
                './images/bg4.jpg'   // Educational impact
            ],
            videos: [
                // Videos will be loaded in loadVideos()
            ],
            donation: {
                defaultAmount: 200,
                minAmount: 50,
                maxAmount: 10000,
                increment: 50,
                baseUrl: 'https://p4hglobal.kindful.com/campaigns/1374266',
                urlParams: {
                    recurring: 'landing_recurring',
                    frequency: ''
                }
            }
        };
        
        this.init();
    }
    
    /**
     * Initialize the application
     */
    async init() {
        try {
            // Wait for DOM to be ready
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', () => {
                    this.initializeComponents();
                });
            } else {
                this.initializeComponents();
            }
            
        } catch (error) {
            console.error('Failed to initialize True North App:', error);
        }
    }
    
    /**
     * Initialize all components
     */
    async initializeComponents() {
        try {
            console.log('🚀 Initializing True North - VIP 77 Campaign Website');
            
            // Load videos
            this.loadVideos();
            
            // Initialize components
            this.initializeBackgroundRotator();
            this.initializeVideoCarousel();
            this.initializeDonationWidget();
            
            // Setup global event listeners
            this.setupGlobalEvents();
            
            // Setup intersection observers for animations
            this.setupIntersectionObservers();
            
            // Mark as initialized
            this.isInitialized = true;
            
            console.log('✅ True North App initialized successfully');
            
        } catch (error) {
            console.error('❌ Failed to initialize components:', error);
        }
    }
    
    /**
     * Initialize background rotator
     */
    initializeBackgroundRotator() {
        try {
            if (typeof BackgroundRotator !== 'undefined') {
                this.components.backgroundRotator = new BackgroundRotator(
                    '#background-container',
                    this.config.backgroundImages,
                    60000 // 60 seconds
                );
                
                console.log('📸 Background rotator initialized');
            } else {
                console.warn('BackgroundRotator class not available');
            }
        } catch (error) {
            console.error('Failed to initialize background rotator:', error);
        }
    }
    
    /**
     * Initialize video carousel
     */
    initializeVideoCarousel() {
        try {
            if (typeof VideoCarousel !== 'undefined') {
                this.components.videoCarousel = new VideoCarousel(
                    '#video-carousel',
                    this.config.videos
                );
                
                console.log('🎥 Video carousel initialized');
            } else {
                console.warn('VideoCarousel class not available');
            }
        } catch (error) {
            console.error('Failed to initialize video carousel:', error);
        }
    }
    
    /**
     * Initialize donation widget
     */
    initializeDonationWidget() {
        try {
            if (typeof DonationWidget !== 'undefined') {
                this.components.donationWidget = new DonationWidget(
                    '#donation-widget',
                    this.config.donation
                );
                
                console.log('💰 Donation widget initialized');
            } else {
                console.warn('DonationWidget class not available');
            }
        } catch (error) {
            console.error('Failed to initialize donation widget:', error);
        }
    }
    
    /**
     * Load videos - configured for static files
     */
    loadVideos() {
        // Define videos from the videos directory
        // Auto-generated by update-videos.js
        this.config.videos = [
                  {
                            "title": "Katie Dumaine",
                            "description": "Katie Dumaine - Part of the True North VIP 77 campaign for P4H Global.",
                            "poster": "./images/Katie Dumaine_thumb.jpg",
                            "src": "./videos/Katie Dumaine.mp4"
                  },
                  {
                            "title": "Liam Helmer",
                            "description": "VIP 77 Student testimonial supporting P4H Global's educational mission in Haiti.",
                            "poster": "./images/Liam Helmer_thumb.jpg",
                            "src": "./videos/Liam Helmer.mp4"
                  }
];
        
        console.log(`📹 Configured ${this.config.videos.length} videos`);
    }
    
    /**
     * Setup global event listeners
     */
    setupGlobalEvents() {
        // Global keyboard shortcuts
        document.addEventListener('keydown', (e) => {
            this.handleGlobalKeyboard(e);
        });
        
        // Responsive design handler
        window.addEventListener('resize', () => {
            this.handleResize();
        });
        
        // Page visibility changes
        document.addEventListener('visibilitychange', () => {
            this.handleVisibilityChange();
        });
        
        console.log('🎧 Global event listeners setup');
    }
    
    /**
     * Setup intersection observers for animations
     */
    setupIntersectionObservers() {
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };
        
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('animate-in');
                } else {
                    entry.target.classList.remove('animate-in');
                }
            });
        }, observerOptions);
        
        // Observe key sections
        const sections = document.querySelectorAll('.hero-section, .video-section, .mission-section');
        sections.forEach(section => observer.observe(section));
        
        console.log('👁️ Intersection observers setup');
    }
    
    /**
     * Handle global keyboard shortcuts
     */
    handleGlobalKeyboard(event) {
        // Don't interfere with form inputs
        if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') {
            return;
        }
        
        switch (event.key) {
            case 'Escape':
                // Resume background rotation if paused
                if (this.components.backgroundRotator) {
                    this.components.backgroundRotator.resume();
                }
                break;
                
            case 'd':
            case 'D':
                // Focus donation widget
                const donationWidget = document.querySelector('#donation-widget');
                if (donationWidget) {
                    donationWidget.scrollIntoView({ behavior: 'smooth' });
                    const amountInput = donationWidget.querySelector('#amount-input');
                    if (amountInput) {
                        setTimeout(() => amountInput.focus(), 500);
                    }
                }
                break;
        }
    }
    
    /**
     * Handle window resize
     */
    handleResize() {
        // Debounce resize events
        clearTimeout(this.resizeTimeout);
        this.resizeTimeout = setTimeout(() => {
            const viewport = {
                width: window.innerWidth,
                height: window.innerHeight
            };
            
            // Notify components of resize if needed
            Object.values(this.components).forEach(component => {
                if (typeof component.handleResize === 'function') {
                    component.handleResize(viewport);
                }
            });
        }, 250);
    }
    
    /**
     * Handle page visibility changes
     */
    handleVisibilityChange() {
        if (document.hidden) {
            // Page is hidden - pause animations
            if (this.components.backgroundRotator) {
                this.components.backgroundRotator.pause();
            }
        } else {
            // Page is visible - resume animations
            if (this.components.backgroundRotator) {
                this.components.backgroundRotator.resume();
            }
        }
    }
    
    /**
     * Get component by name
     */
    getComponent(name) {
        return this.components[name] || null;
    }
    
    /**
     * Get all components
     */
    getAllComponents() {
        return { ...this.components };
    }
    
    /**
     * Get application status
     */
    getStatus() {
        return {
            initialized: this.isInitialized,
            components: Object.keys(this.components),
            config: this.config
        };
    }
    
    /**
     * Clean up resources
     */
    destroy() {
        // Clean up components
        Object.values(this.components).forEach(component => {
            if (typeof component.destroy === 'function') {
                component.destroy();
            }
        });
        
        this.components = {};
        this.isInitialized = false;
        
        // Clear timeouts
        if (this.resizeTimeout) {
            clearTimeout(this.resizeTimeout);
        }
    }
}

// Initialize the application when script loads
let trueNorthApp;

if (typeof window !== 'undefined') {
    // Initialize on DOM ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
            trueNorthApp = new TrueNorthApp();
        });
    } else {
        trueNorthApp = new TrueNorthApp();
    }
    
    // Make app available globally for debugging
    window.TrueNorthApp = trueNorthApp;
}

// Export for module use
if (typeof module !== 'undefined' && module.exports) {
    module.exports = TrueNorthApp;
}